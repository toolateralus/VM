class wizard 
{
    constructor(id) {
        this.id = id;
        App.eventHandler('createBtn', 'create', Event.MouseDown);
    }
	create () {
		var appName = App.getProperty('nameBox', 'Text').replace('.app', '');
        var appDirName = appName;
    	appDirName += '.app';
    	
		const appType = App.getProperty('appTypeBox', 'SelectedIndex');
		const config = 
		{
			title: appName, 
			name: appName,
			version: '0.0.0a',
			description: 'a bare boiler plate application generated by the "Wizard" app.'
		};


		switch (appType) {
			// terminal
			case 0:
				this.create_terminal(appName, appDirName);
				config.entryPoint = appName + '.js';
				config.terminal = true;
				break;
			// gui 
			case 1:
				this.create_gui(appName, appDirName);
				config.frontEnd = appName + '.xaml';
				config.isWpf = true;
				break;
			default:
				notify('You must select an app type to create an app');
				return;
				break;
		}

		const configPath = 'home/myApps/' + appDirName + '/' + appName + '.appconfig';
		File.write(configPath, JSON.stringify(config, null, 2));
	}
	create_terminal(appName, appDirName) {
		
            
        const main_filePath =  'home/myApps/' + appDirName + '/' + appName  + '.js';

        File.write(main_filePath, '// write your code here ðŸ˜‚');

        call(`install '${appDirName}'`);
		
	}
    create_gui(appName, appDirName) {
        const xamlPath = 'home/myApps/' + appDirName + '/' + appName + '.xaml';
        const xamljsPath =  xamlPath + '.js';
		
		const xamljsCode = File.read('template.xaml.js').replace('__APPNAME__', appName);
        const xamlCode = File.read('template.xaml');
        
        File.write(xamljsPath, xamljsCode)
        File.write(xamlPath, xamlCode)

        call(`install '${appDirName}'`);
    }
}